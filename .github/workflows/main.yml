name: Run my script

on:
  # 1) Schedule (cada lunes a las 00:00 UTC)
  schedule:
    - cron: '0 0 * * 1'
  # 2) Ejecución manual
  workflow_dispatch:
  # 3) Push en la carpeta Guiones/capitulos/*.json
  push:
    paths:
      - 'Guiones/capitulos/*.json'

permissions:
  contents: write

# Se elimina el bloque concurrency para no cancelar la ejecución anterior.
# concurrency:
#   group: run-script
#   cancel-in-progress: true

jobs:
  run-script:
    runs-on: ubuntu-latest

    # Condición que permite:
    # - Si es un "schedule" (cron) o un "workflow_dispatch", corre siempre.
    # - Si es un "push", corre solo si detectamos algún archivo añadido en Guiones/capitulos/.
    if: >
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      contains(toJson(github.event.commits.*.added), 'Guiones/capitulos/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true  # Usa GITHUB_TOKEN para autenticar

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          # Ej: google-api-python-client, google-auth, etc.

      - name: Install ffmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Create service account file
        run: echo "${{ secrets.GOOGLE_SERVICE_ACCOUNT_BASE64 }}" | base64 --decode > service_account.json

      - name: Run script
        run: python main.py
        env:
          GOOGLE_DRIVE_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
          VALOR_A: ${{ secrets.VALOR_A }}
          VALOR_B: ${{ secrets.VALOR_B }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      # Hacemos pull --rebase para evitar rechazos al hacer push
      - name: Pull latest changes (rebase)
        run: git pull --rebase origin main

      - name: Commit changes
        run: |
          git add .
          git commit -m "Automated commit by GitHub Actions" || echo "No changes to commit"

      - name: Push changes
        run: git push
